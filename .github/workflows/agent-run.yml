name: ELIS - Agent Run
# -----------------------------------------------------------------------------
# Purpose
#   Run the toy agent (scripts/agent.py) to generate MVP artefacts under
#   json_jsonl/. Always upload them as an artifact.
#   By default, also commit artefacts to branch "ci/agent-autopr" and open a PR
#   into main. You can override or clear the branch at dispatch time.
# -----------------------------------------------------------------------------

on:
  workflow_dispatch:
    inputs:
      ref:
        description: "Git ref to run against (branch or tag). Defaults to main."
        required: false
        default: "main"
      write_branch:
        description: "Branch to commit json_jsonl/ into (blank = no commit/PR)."
        required: false
        default: "ci/agent-autopr"
      base_branch:
        description: "Base branch to PR into (when write_branch is set)."
        required: false
        default: "main"
      open_pr:
        description: "Open/refresh PR write_branch → base_branch (when write_branch is set)."
        required: false
        default: "true"

permissions:
  contents: write
  pull-requests: write

# Avoid commit/PR races on the same branch
concurrency:
  group: agent-autopr-${{ github.event.inputs.write_branch != '' && github.event.inputs.write_branch || 'no-commit' }}
  cancel-in-progress: false

jobs:
  run-agent:
    runs-on: ubuntu-latest
    steps:
      - name: Mint installation token (GitHub App)
        id: app
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.ELIS_APP_ID }}
          private-key: ${{ secrets.ELIS_APP_PRIVATE_KEY }}

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.ref || 'main' }}
          fetch-depth: 0
          token: ${{ steps.app.outputs.token }}

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install runtime (best-effort)
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt || true

      - name: Run Toy Agent
        run: python scripts/agent.py

      - name: List artefacts
        run: |
          echo "==> json_jsonl/"
          ls -la json_jsonl || true
          echo "==> json_jsonl/config (if present)"
          ls -la json_jsonl/config || true
          echo "==> json_jsonl/logs (if present)"
          ls -la json_jsonl/logs || true

      - name: Upload artefacts (json_jsonl/)
        uses: actions/upload-artifact@v4
        with:
          name: json_jsonl
          path: json_jsonl/**
          if-no-files-found: error
          retention-days: 14

      # ---------- Optional: commit and PR ------------------------------------
      - name: Prepare work branch
        if: ${{ github.event.inputs.write_branch != '' }}
        env:
          BASE: ${{ github.event.inputs.base_branch }}
          HEAD: ${{ github.event.inputs.write_branch }}
        run: |
          set -eux
          git fetch origin --prune
          if git ls-remote --exit-code --heads origin "$HEAD" >/dev/null 2>&1; then
            git checkout -B "$HEAD" "origin/$HEAD"
            git merge --ff-only "origin/${BASE:-main}" || true
          else
            git checkout -B "$HEAD" "origin/${BASE:-main}"
          fi
          git config user.name  "elis-bot"
          git config user.email "elis-bot@users.noreply.github.com"

      - name: Commit artefacts to work branch
        if: ${{ github.event.inputs.write_branch != '' }}
        run: |
          set -eux
          git add -A json_jsonl
          if git diff --cached --quiet; then
            echo "No artefact changes to commit."
            echo "HAS_COMMIT=false" >> $GITHUB_ENV
          else
            git commit -m "data(agent): update json_jsonl artefacts (A/B/C) from ELIS - Agent Run"
            echo "HAS_COMMIT=true" >> $GITHUB_ENV
          fi

      - name: Push work branch
        if: ${{ github.event.inputs.write_branch != '' && env.HAS_COMMIT == 'true' }}
        run: |
          set -eux
          git push --force-with-lease origin HEAD:${{ github.event.inputs.write_branch }}

      - name: Open/refresh PR (write_branch → base_branch)
        if: ${{ github.event.inputs.write_branch != '' && github.event.inputs.open_pr == 'true' }}
        uses: actions/github-script@v6
        with:
          github-token: ${{ steps.app.outputs.token }}
          script: |
            const owner = context.repo.owner;
            const repo  = context.repo.repo;
            const base  = core.getInput('base_branch') || 'main';
            const head  = core.getInput('write_branch');

            const { data: openPRs } = await github.rest.pulls.list({
              owner, repo, state: 'open', base, head: `${owner}:${head}`,
            });
            if (openPRs.length > 0) {
              core.info(`PR already open: #${openPRs[0].number}`);
              return;
            }

            const cmp = await github.rest.repos.compareCommitsWithBasehead({
              owner, repo, basehead: `${base}...${head}`,
            });
            const hasDiff = (cmp.data.ahead_by > 0) || ((cmp.data.files || []).length > 0);
            if (!hasDiff) {
              core.info(`No diff between ${base} and ${head}; PR not required.`);
              return;
            }

            const title = "data(agent): add/update json_jsonl artefacts (ELIS - Agent Run)";
            const body  = [
              "Automated artefacts from **ELIS - Agent Run**.",
              "",
              "- Folder: `json_jsonl/`",
              "- Behaviour: read-only (no schema/logic changes)",
            ].join("\n");

            const { data: pr } = await github.rest.pulls.create({
              owner, repo, head, base, title, body,
            });
            core.info(`Opened PR #${pr.number}`);
