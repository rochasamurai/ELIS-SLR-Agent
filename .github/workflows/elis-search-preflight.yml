name: ELIS - Search Preflight / Self-Test
# =============================================================================
# Purpose
#   Quick, isolated validation of the Appendix A search script:
#   - Runs in dry-run mode (no writes).
#   - Smoke-tests config and network reachability (Crossref/S2/arXiv).
#   - Asserts we can parse and summarize results.
# =============================================================================

on:
  workflow_dispatch: {}

permissions:
  contents: read
  actions: read

jobs:
  preflight:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install requests pyyaml

      - name: Limit config for smoke test (inject env caps)
        run: |
          # Create a copy of the config with very small caps for the dry run
          mkdir -p /tmp/elis
          cp config/elis_search_queries.yml /tmp/elis/elis_search_queries.yml
          # Reduce job cap to 50 to keep it quick
          python - <<'PY'
          import yaml, sys
          p="/tmp/elis/elis_search_queries.yml"
          y=yaml.safe_load(open(p, "r", encoding="utf-8"))
          y.setdefault("global", {})["job_result_cap"]=50
          with open(p, "w", encoding="utf-8") as f:
              yaml.safe_dump(y, f, sort_keys=False, allow_unicode=True)
          print("Patched job_result_cap=50")
          PY

      - name: Run search (dry-run)
        env:
          SEMANTIC_SCHOLAR_API_KEY: ${{ secrets.SEMANTIC_SCHOLAR_API_KEY }}
        run: |
          python scripts/elis/search_mvp.py --config /tmp/elis/elis_search_queries.yml --dry-run

      - name: Preflight summary
        run: |
          echo "âœ… Search script executed in dry-run."
          echo "Check logs for sources contacted and meta payload."
