# ============================================================
# ELIS - Autoformat
# Purpose:
#   - Run Black on branch "elis-bot".
#   - If there are changes, commit & push to "elis-bot".
# Notes:
#   - Uses GitHub App token (no PAT).
#   - Intentionally no PR creation here (keep it stable).
# ============================================================

name: ELIS - Autoformat

on:
  workflow_dispatch: {}

permissions:
  contents: write

jobs:
  autoformat:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      # 1) Mint an installation token for the ELIS GitHub App
      - name: Mint installation token (GitHub App)
        id: app
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.ELIS_APP_ID }}
          private-key: ${{ secrets.ELIS_APP_PRIVATE_KEY }}

      # 2) Check out the working branch "elis-bot"
      - name: Checkout elis-bot
        uses: actions/checkout@v4
        with:
          ref: elis-bot
          token: ${{ steps.app.outputs.token }}
          fetch-depth: 0

      # 3) Fast-forward elis-bot from main (if possible)
      - name: Sync with main (fast-forward if possible)
        run: |
          set -euo pipefail
          git fetch origin main --depth=1
          # If elis-bot is behind, try a fast-forward; ignore if not possible
          git merge --ff-only origin/main || echo "Notice: fast-forward not possible; continuing."

      # 4) Set up Python and install Black (pinned)
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Black
        run: |
          python -m pip install --upgrade pip
          pip install black==24.8.0

      # 5) Run Black in place
      - name: Run Black (format in-place)
        run: black .

      # 6) Commit & push only if there are changes
      - name: Commit and push if changed
        env:
          BOT_NAME: "ELIS Bot"
          BOT_EMAIL: "233278419+elis-bot@users.noreply.github.com"
        run: |
          set -euo pipefail
          echo "---- git status (after Black) ----"
          git status --porcelain
          if git diff --quiet; then
            echo "No formatting changes detected."
            exit 0
          fi
          git config user.name  "$BOT_NAME"
          git config user.email "$BOT_EMAIL"
          git add -A
          git commit -m "chore(format): apply Black autoformat"
          git push origin HEAD:elis-bot
          echo "Pushed: $(git rev-parse --short HEAD)"
