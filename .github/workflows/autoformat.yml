# ELIS - Autoformat
# Purpose: Manually run Black on branch `elis-bot` and commit any formatting changes via GitHub App.
# Notes:
#  - Keep this workflow in `main`. It checks out `elis-bot` to apply formatting there.
#  - Logs clearly show when no changes occur and print the commit SHA when they do.

name: ELIS - Autoformat

on:
  workflow_dispatch: {}

jobs:
  autoformat:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    defaults:
      run:
        shell: bash

    steps:
      # 1) Mint an installation token from the installed GitHub App (elis-bot-commits)
      - name: Mint installation token (GitHub App)
        id: app
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.ELIS_APP_ID }}
          private-key: ${{ secrets.ELIS_APP_PRIVATE_KEY }}

      # 2) Checkout the automation branch where formatting will be applied
      - name: Checkout branch elis-bot
        uses: actions/checkout@v4
        with:
          ref: elis-bot
          token: ${{ steps.app.outputs.token }}

      # 3) Set up Python
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # 4) Install Black (pinned version for reproducibility)
      - name: Install Black
        run: |
          python -m pip install --upgrade pip
          pip install black==24.8.0

      # 5) Run Black in-place across the repository
      - name: Run Black (format in-place)
        run: |
          black .

      # 6) Detect changes and output a clear no-op message if none
      - name: Detect changes
        id: changes
        run: |
          if git diff --quiet; then
            echo "changed=false" >> "$GITHUB_OUTPUT"
            echo "No formatting changes detected."
          else
            echo "changed=true" >> "$GITHUB_OUTPUT"
          fi

      # 7) Commit and push only when changes exist, and expose the commit SHA
      - name: Commit and push (if changed)
        if: ${{ steps.changes.outputs.changed == 'true' }}
        id: commit
        run: |
          git config user.name "ELIS Bot"
          git config user.email "233278419+elis-bot@users.noreply.github.com"
          git add -A
          git commit -m "chore(format): apply Black autoformat"
          echo "sha=$(git rev-parse HEAD)" >> "$GITHUB_OUTPUT"
          git push origin HEAD:elis-bot

      # 8) Print the commit SHA in the logs for reviewers (use env to avoid template in run line)
      - name: Show commit SHA
        if: ${{ steps.changes.outputs.changed == 'true' }}
        env:
          COMMIT_SHA: ${{ steps.commit.outputs.sha }}
        run: |
          echo "Autoformat commit SHA: ${COMMIT_SHA}"
