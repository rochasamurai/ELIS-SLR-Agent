name: ELIS - Bot Commit and PR (no-PAT)

on:
  workflow_dispatch:
    inputs:
      file_path:
        description: "Path to create/update (e.g., scripts/validate_json.py)"
        required: true
      content_base64:
        description: "Base64-encoded file content"
        required: true
      commit_message:
        description: "Commit message"
        required: true
      target_branch:
        description: "Base branch (default: main)"
        required: false
        default: "main"
      pr_title:
        description: "Pull Request title"
        required: false
        default: "Automated update"
      pr_body:
        description: "Pull Request body"
        required: false
        default: "Automated update by ELIS Bot."

jobs:
  commit-and-pr:
    runs-on: ubuntu-latest
    permissions:
      contents: write         # allow pushing commits
      pull-requests: write    # allow creating PRs
    env:
      GH_TOKEN: ${{ github.token }}  # built-in token for this repo
      GIT_AUTHOR_NAME: ELIS Bot
      GIT_AUTHOR_EMAIL: 233278419+elis-bot@users.noreply.github.com
      GIT_COMMITTER_NAME: ELIS Bot
      GIT_COMMITTER_EMAIL: 233278419+elis-bot@users.noreply.github.com

    steps:
      - name: Checkout base branch
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.target_branch }}

      - name: Prepare new branch name
        id: prep
        shell: bash
        run: |
          set -euo pipefail
          ts="$(date -u +'%Y%m%d-%H%M%S')"
          safe="$(echo "${{ inputs.commit_message }}" | tr ' ' '-' | tr -cd '[:alnum:]-_')"
          echo "branch=bot/${safe:-update}-${ts}" >> "$GITHUB_OUTPUT"

      - name: Create working branch
        run: git switch -c "${{ steps.prep.outputs.branch }}"

      - name: Write file content
        shell: bash
        run: |
          set -euo pipefail
          fp="${{ inputs.file_path }}"
          mkdir -p "$(dirname "$fp")"
          echo "${{ inputs.content_base64 }}" | base64 -d > "$fp"
          # Ensure trailing newline for POSIX-friendly tools
          tail -c1 "$fp" | read -r _ || echo >> "$fp"
          git status --porcelain

      - name: Commit changes
        run: |
          git add "${{ inputs.file_path }}"
          git -c user.name="$GIT_AUTHOR_NAME" -c user.email="$GIT_AUTHOR_EMAIL" \
              commit -m "${{ inputs.commit_message }}"

      - name: Push branch
        run: git push --set-upstream origin "${{ steps.prep.outputs.branch }}"

      - name: Create Pull Request
        run: |
          gh pr create \
            --title "${{ inputs.pr_title }}" \
            --body "${{ inputs.pr_body }}" \
            --base "${{ inputs.target_branch }}" \
            --head "${{ steps.prep.outputs.branch }}"
