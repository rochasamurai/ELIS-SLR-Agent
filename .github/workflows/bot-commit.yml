# ELIS - Bot Commit and PR (auto-merge, no-PAT)
# Paste raw code -> branch -> PR -> auto-merge into main.

name: ELIS - Bot Commit and PR (auto-merge, no-PAT)

on:
  workflow_dispatch:
    inputs:
      file_path:
        description: "Path to create/update (e.g., scripts/validate_json.py)"
        required: true
      content_raw:
        description: "Raw file content (paste full code here)"
        required: true
      commit_message:
        description: "Concise commit message"
        required: true
      target_branch:
        description: "Base branch"
        required: false
        default: "main"
      pr_title:
        description: "Pull Request title"
        required: false
        default: "Automated update"
      pr_body:
        description: "Pull Request body"
        required: false
        default: "Automated update by ELIS Bot."

jobs:
  commit-and-pr:
    runs-on: ubuntu-latest

    # Minimal permissions to push and create PRs.
    permissions:
      contents: write
      pull-requests: write

    env:
      GH_TOKEN: ${{ github.token }}  # Built-in token scoped to this repo
      GIT_AUTHOR_NAME: ELIS Bot
      GIT_AUTHOR_EMAIL: 233278419+elis-bot@users.noreply.github.com
      GIT_COMMITTER_NAME: ELIS Bot
      GIT_COMMITTER_EMAIL: 233278419+elis-bot@users.noreply.github.com

    steps:
      - name: Checkout base branch
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.target_branch }}

      - name: Prepare working branch name
        id: prep
        shell: bash
        run: |
          set -euo pipefail
          ts="$(date -u +'%Y%m%d-%H%M%S')"
          safe_msg="$(echo "${{ inputs.commit_message }}" | tr ' ' '-' | tr -cd '[:alnum:]-_')"
          echo "branch=bot/${safe_msg:-update}-${ts}" >> "$GITHUB_OUTPUT"

      - name: Create working branch
        shell: bash
        run: git switch -c "${{ steps.prep.outputs.branch }}"

      - name: Sanitise path input
        id: path
        shell: bash
        run: |
          set -euo pipefail
          IN_PATH="${{ inputs.file_path }}"
          SAN_PATH="$(printf '%s' "$IN_PATH" | sed -E 's/^file_path:[[:space:]]*//; s#[[:space:]]+$##; s#//+#/#g')"
          echo "path=$SAN_PATH" >> "$GITHUB_OUTPUT"

      - name: Write file content (raw text)
        shell: bash
        env:
