# .github/workflows/ci.yml
# ELIS - CI
# Purpose:
#   - quality: Ruff (lint) + Black (check)
#   - tests: run pytest when tests exist; tolerate exit code 5 (no tests collected)
#   - validate: runs validator; tolerant to warnings
#
# Triggers:
#   - PRs to main, pushes to main that touch this file, and manual dispatch.

name: ELIS - CI

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
    paths:
      - ".github/workflows/ci.yml"
  workflow_dispatch: {}

permissions:
  contents: read

jobs:
  quality:
    name: quality
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install tools (Ruff, Black)
        run: |
          python -m pip install --upgrade pip
          pip install ruff==0.6.9 black==24.8.0

      - name: Ruff (lint)
        run: ruff check .

      - name: Black (check)
        run: black --check .

  tests:
    name: tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install runtime + pytest
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install pytest

      # Run pytest if we have any test files;
      # if pytest exits 5 ("no tests collected"), treat it as success.
      - name: Run pytest if tests exist (tolerate exit code 5)
        shell: bash
        run: |
          set -e
          shopt -s nullglob globstar
          files=(tests/*.py tests/**/*.py)
          if (( ${#files[@]} == 0 )); then
            echo "No test files under tests/ — skipping pytest."
            exit 0
          fi
          echo "Found ${#files[@]} test candidate file(s). Running pytest…"
          set +e
          pytest -q
          rc=$?
          set -e
          if [ "$rc" -eq 0 ]; then
            echo "pytest passed."
            exit 0
          elif [ "$rc" -eq 5 ]; then
            echo "pytest exit code 5 (no tests collected) — treating as success."
            exit 0
          else
            echo "pytest failed with exit code $rc."
            exit "$rc"
          fi

  validate:
    name: validate
    needs: [ quality ]  # independent of tests (which may be skipped)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install runtime deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run validator (non-blocking)
        run: |
          python scripts/validate_json.py || echo "::warning ::validator returned non-zero (tolerated by CI)"
