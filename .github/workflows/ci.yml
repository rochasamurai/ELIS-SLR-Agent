name: ELIS - CI

on:
  pull_request:
    branches: [ "main" ]
    types: [opened, synchronize, reopened, ready_for_review]
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write

concurrency:
  group: ci-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: false

jobs:
  quality:
    name: quality
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install linters
        run: |
          python -m pip install --upgrade pip
          pip install ruff==0.6.9 black==24.8.0

      - name: Ruff (check)
        run: ruff check .

      - name: Black (check)
        run: black --check .

  tests:
    name: tests
    needs: quality
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          # Keep deterministic test env
          pip install -r requirements.txt
          pip install pytest

      - name: Run pytest
        env:
          PYTHONWARNINGS: default
        run: |
          set -e
          echo "Found $(ls tests | wc -l) test candidate file(s). Running pytestâ€¦"
          pytest -q

  validate:
    name: validate
    needs: quality
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install validator deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          # format-nongpl is optional; script tolerates absence
          pip install "jsonschema[format-nongpl]==4.23.0" || true

      - name: Validate artefacts (non-blocking)
        run: |
          set -e
          python scripts/validate_json.py || true

  add_and_set_status:
    name: Projects Auto-Add / add_and_set_status
    needs: [quality, tests, validate]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Note completion
        uses: actions/github-script@v6
        with:
          script: |
            core.notice('CI completed for PR #' + (context.payload.pull_request?.number ?? 'N/A'))
