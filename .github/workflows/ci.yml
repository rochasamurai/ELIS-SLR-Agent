name: ELIS - CI

on:
  pull_request:
    # Run CI on normal PR events, including agent auto-PRs that only touch JSON
    types: [opened, synchronize, reopened, ready_for_review]
    branches: [main]
    paths:
      - "**/*.py"
      - "json_jsonl/**"
      - "schemas/**"
      - "requirements.txt"
      - "pyproject.toml"
      - ".github/workflows/ci.yml"
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: false

jobs:
  quality:
    # Skip draft PRs, but still run on manual dispatch
    if: github.event_name != 'pull_request' || github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install quality tools
        run: |
          python -m pip install --upgrade pip
          pip install black==24.8.0 ruff==0.6.9

      - name: Black (check)
        run: black --check .

      - name: Ruff (check)
        run: ruff check .

  tests:
    needs: quality
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install test deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest

      - name: Run pytest
        run: |
          set -e
          pytest -q

  validate:
    # Validation is non-blocking by design, but still runs on data-only PRs
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install runtime (minimal)
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Validate artefacts (non-blocking)
        run: |
          python scripts/validate_json.py || true
