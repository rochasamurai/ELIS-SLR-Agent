name: ELIS Validation
on: [push, pull_request, workflow_dispatch]

jobs:
  validate:
    runs-on: ubuntu-latest
    permissions:
      contents: write   # necessário apenas para o passo opcional que comita o log
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install deps
        run: pip install jsonschema

      - name: Run validator and capture log (robust)
        shell: bash
        run: |
          set -o pipefail
          mkdir -p validation_reports
          LOG="validation_reports/ci_${{ github.run_id }}.log"
          {
            echo "=== ELIS Validation start: $(date -u +'%F %T') UTC ==="
            echo "Repo: $GITHUB_REPOSITORY  •  Ref: $GITHUB_REF  •  Run: $GITHUB_RUN_ID"
            echo "Validator: scripts/validate_json.py  (warnings silenced in-script)"
            echo "---- OUTPUT ----"
            # Executa o validador; mesmo que ele não imprima nada, haverá cabeçalho
            python -W ignore::DeprecationWarning -u scripts/validate_json.py --strict || true
            echo "---- END OUTPUT ----"
            echo "Exit status preserved above; see job result."
            echo "=== ELIS Validation end: $(date -u +'%F %T') UTC ==="
          } 2>&1 | tee "$LOG"

          echo "Log bytes:"
          wc -c "$LOG" || true

          echo "Log head:"
          head -n 10 "$LOG" || true

          echo "Log tail:"
          tail -n 10 "$LOG" || true

      - name: Upload validation report (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: validation-report-${{ github.run_number }}
          path: validation_reports/**
          retention-days: 14

      # Opcional: também comitar o log no repositório para auditoria
      - name: Commit validation report to repo
        if: always()
        uses: EndBug/add-and-commit@v9
        with:
          add: "validation_reports/*.log"
          message: "chore: CI validation report [skip ci]"
