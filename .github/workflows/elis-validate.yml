name: ELIS - Validate
# =============================================================================
# Purpose
#   Validate ELIS artefacts (Appendix A/B/C) against MVP schemas and generate
#   a Markdown report. If the report content changed, create/update a PR from
#   'ci/validation-report' into 'main'. Upload the report as a run artifact.
#
# Loop prevention
#   - Triggers only on pushes to 'main' (and manual runs).
#   - Excludes 'validation_reports/**' from triggers, so committing the report
#     never re-triggers this workflow.
#   - Concurrency collapses overlapping runs.
#
# CI triggering on the report PR
#   We mint a short-lived GitHub App installation token and use it to push/open
#   the PR. This ensures your regular CI runs on that PR automatically.
# =============================================================================

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - 'json_jsonl/**'
      - 'schemas/**'
      - 'scripts/validate_json.py'
      - '.github/workflows/elis-validate.yml'
      # IMPORTANT: no 'validation_reports/**' here (prevents loops)

permissions:
  contents: write
  pull-requests: write

concurrency:
  group: validate-${{ github.ref }}
  cancel-in-progress: true

env:
  BASE_BRANCH: main
  WRITE_BRANCH: ci/validation-report

jobs:
  validate:
    name: validate
    runs-on: ubuntu-latest

    steps:
      - name: Checkout main
        uses: actions/checkout@v4
        with:
          ref: ${{ env.BASE_BRANCH }}
          persist-credentials: false  # weâ€™ll push with an App token

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install validator deps (deterministic)
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run validator (writes validation_reports/validation-report.md)
        run: |
          python scripts/validate_json.py

      - name: Stage report and detect diff
        id: diff
        shell: bash
        run: |
          set -eux
          git add -N validation_reports/validation-report.md
          if git diff --quiet -- validation_reports/validation-report.md; then
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Upload report artifact
        if: steps.diff.outputs.changed == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: validation-report
          path: validation_reports/validation-report.md

      # --- NEW: mint a short-lived installation token for the PR/push ---
      - name: Mint GitHub App token
        id: app
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.ELIS_APP_ID }}
          private-key: ${{ secrets.ELIS_APP_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}
          repositories: ${{ github.event.repository.name }}

      - name: Create / update PR with changed report
        if: steps.diff.outputs.changed == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ steps.app.outputs.token }}
          branch: ${{ env.WRITE_BRANCH }}
          base:   ${{ env.BASE_BRANCH }}
          commit-message: |
            ci(validate): update validation report
          title: "ci(validate): validation report"
          body: |
            Automated validation report.
            This PR opens only when the report content changes vs the last report commit.
          add-paths: |
            validation_reports/validation-report.md
          delete-branch: true
