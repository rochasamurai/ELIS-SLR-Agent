name: ELIS - Validate
# ============================================================================
# Purpose
#   Generate a Markdown validation report from the JSON artefacts (A/B/C),
#   and open/update a small PR only when the report CONTENT changes.
#
# Why this change
#   In some runs a report was generated but no PR appeared. The root cause was
#   checking for changes BEFORE staging the new report (so git saw “no diff”).
#   We now:
#     • Always stage the report, THEN check the index for changes.
#     • Create/update branch `ci/validation-report` via create-pull-request only
#       when the staged report differs.
#     • Upload the report as a run artifact so it’s always easy to download.
#
# Notes
#   - Keeps the job green on “no changes” (no-op).
#   - Uses only default dependencies (jsonschema installed via requirements.txt).
# ============================================================================

on:
  # Manual runs
  workflow_dispatch: {}

  # Keep the report current on relevant pushes
  push:
    branches: [ main ]
    paths:
      - "schemas/**"
      - "scripts/validate_json.py"
      - ".github/workflows/elis-validate.yml"

  # Show report status in PRs that might affect validation
  pull_request:
    branches: [ main ]
    paths:
      - "schemas/**"
      - "scripts/validate_json.py"

permissions:
  contents: write        # needed for create-pull-request
  pull-requests: write   # needed for create-pull-request

jobs:
  validate:
    name: validate
    runs-on: ubuntu-latest

    steps:
      # 1) Checkout full history (PR branch or main)
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2) Python toolchain
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      # 3) Install runtime deps (jsonschema, optional extras if present)
      - name: Install runtime deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      # 4) Run the validator (non-blocking by design)
      #    scripts/validate_json.py should write:
      #      validation_reports/validation-report.md  (stable filename)
      - name: Run validator
        run: |
          set -euo pipefail
          python scripts/validate_json.py
          test -f validation_reports/validation-report.md

      # 5) Upload the report as a run artifact for quick download, regardless of PR
      - name: Upload validation report (artifact)
        uses: actions/upload-artifact@v4
        with:
          name: validation-report
          path: validation_reports/validation-report.md

      # 6) Stage the report and detect changes in the INDEX (critical!)
      #    If nothing is staged, there's no diff to commit → skip PR creation.
      - name: Detect report changes
        id: diff
        run: |
          set -euo pipefail
          git config user.name  "elis-bot"
          git config user.email "elis-bot@users.noreply.github.com"

          # Stage ONLY the report (so we don’t accidentally commit unrelated files).
          git add -A validation_reports/validation-report.md || true

          if git diff --cached --quiet; then
            echo "changed=false" >> "$GITHUB_OUTPUT"
            echo "No staged changes to the report."
          else
            echo "changed=true" >> "$GITHUB_OUTPUT"
            echo "Report content changed; will open/update PR."
          fi

      # 7) Create or update PR branch ONLY when there is a staged change
      - name: Create/Update PR with report (changed only)
        if: steps.diff.outputs.changed == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          branch: ci/validation-report
          commit-message: "ci(validate): update validation report"
          title: "ci(validate): validation report"
          body: |
            Automated validation report.
            This PR opens only when the report content changes vs the last report commit.
          add-paths: |
            validation_reports/validation-report.md
          signoff: false
          delete-branch: false

      # 8) No-op path keeps job green and noiseless
      - name: No change in report (skip PR)
        if: steps.diff.outputs.changed != 'true'
        run: echo "Report unchanged; PR not required."
