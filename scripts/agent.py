#!/usr/bin/env python3 """ Minimal ELIS Agent stub (MVP) - Purpose: write a valid A/rows JSONL sample and exit 0. - Keeps the script lint-clean (Ruff) and easy to extend. """  from __future__ import annotations  import json  # Standard JSON encoder from datetime import datetime as dt  # Timestamp helper from pathlib import Path  # Filesystem paths   # Repository root (two levels up from this file) ROOT = Path(__file__).resolve().parents[1]   def main() -> int:     """Generate a minimal A/rows artifact under json_jsonl/."""     out_dir = ROOT / "json_jsonl"     out_dir.mkdir(parents=True, exist_ok=True)      out_file = out_dir / "A_rows.jsonl"      # Example row â€” adjust schema/fields as the project evolves.     row = {         "id": "sample-001",         "source": "agent-mvp",         "created_at": dt.utcnow().isoformat(timespec="seconds") + "Z",         "payload": {"ok": True},     }      # Write single JSON line (valid JSONL)     with out_file.open("w", encoding="utf-8", newline="\n") as f:         f.write(json.dumps(row, ensure_ascii=False) + "\n")      print(f"Wrote 1 row to {out_file.relative_to(ROOT)}")     return 0   if __name__ == "__main__":     raise SystemExit(main())
